services:
  mcp-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: mcp-open-discovery
    container_name: mcp-open-discovery
    ports:
      - "3000:3000"
    environment:
      - ZABBIX_BASE_URL=http://172.20.0.23:8080
      - ZABBIX_USERNAME=Admin
      - ZABBIX_PASSWORD=OpenMCPD1sc0v3ry!
      # AMQP Transport Configuration
      - AMQP_URL=amqp://mcp:discovery@rabbitmq:5672
      - AMQP_ENABLED=true
      - TRANSPORT_MODE=http,amqp
      - HTTP_PORT=3000
      - LOG_LEVEL=info
      # AMQP Tuning and Routing
      - AMQP_QUEUE_PREFIX=mcp.discovery
      - AMQP_EXCHANGE=mcp.notifications
      - AMQP_PREFETCH_COUNT=1
      - AMQP_MESSAGE_TTL=3600000
      - AMQP_QUEUE_TTL=7200000
      # AMQP Auto-Recovery Configuration
      - AMQP_AUTO_RECOVERY=true
      - AMQP_RECONNECT_DELAY=10000
      - AMQP_MAX_RETRY_ATTEMPTS=50
    volumes:
      # Persistent SQLite database storage
      - mcp_data:/home/mcpuser/app/data
      # Optional: Mount logs directory
      - mcp_logs:/home/mcpuser/app/logs
      # Plugins volume (2GB target; actual limit depends on Docker driver)
      - mcp_plugins:/plugins
    networks:
      - mcp-network
    restart: unless-stopped
    cap_add:
      - NET_RAW
      - NET_ADMIN
      - NET_BIND_SERVICE
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      rabbitmq:
        condition: service_healthy

  # RabbitMQ for AMQP Transport
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: mcp-rabbitmq
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=mcp
      - RABBITMQ_DEFAULT_PASS=discovery
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_MANAGEMENT_PATH_PREFIX=/rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      mcp-network:
        ipv4_address: 172.20.0.20
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # SNMP Test Servers for development and testing

  # 1. First SNMP Agent
  snmp-agent-1:
    image: alpine:latest
    container_name: snmp-agent-1
    ports:
      - "1161:161/udp"
    networks:
      mcp-network:
        ipv4_address: 172.20.0.10
    restart: unless-stopped
    command: >
      sh -c "
      apk add --no-cache net-snmp &&
      mkdir -p /etc/snmp &&
      echo 'rocommunity public default' > /etc/snmp/snmpd.conf &&
      echo 'syslocation Docker Test Lab' >> /etc/snmp/snmpd.conf &&
      echo 'syscontact Admin <admin@test.local>' >> /etc/snmp/snmpd.conf &&
      echo 'sysname snmp-test-1' >> /etc/snmp/snmpd.conf &&
      /usr/sbin/snmpd -f -Lo -c /etc/snmp/snmpd.conf"

  # 2. Second SNMP Agent 
  snmp-agent-2:
    image: alpine:latest
    container_name: snmp-agent-2
    ports:
      - "2161:161/udp"
    networks:
      mcp-network:
        ipv4_address: 172.20.0.11
    restart: unless-stopped
    command: >
      sh -c "
      apk add --no-cache net-snmp &&
      mkdir -p /etc/snmp &&
      echo 'rocommunity public default' > /etc/snmp/snmpd.conf &&
      echo 'syslocation Docker Test Lab 2' >> /etc/snmp/snmpd.conf &&
      echo 'syscontact Admin <admin@test.local>' >> /etc/snmp/snmpd.conf &&
      echo 'sysname snmp-test-2' >> /etc/snmp/snmpd.conf &&
      /usr/sbin/snmpd -f -Lo -c /etc/snmp/snmpd.conf"

  # 3. Third SNMP Agent with different community
  snmp-agent-3:
    image: alpine:latest
    container_name: snmp-agent-3
    ports:
      - "3161:161/udp"
    networks:
      mcp-network:
        ipv4_address: 172.20.0.12
    restart: unless-stopped
    command: >
      sh -c "
      apk add --no-cache net-snmp &&
      mkdir -p /etc/snmp &&
      echo 'rocommunity public default' > /etc/snmp/snmpd.conf &&
      echo 'rocommunity testcommunity default' >> /etc/snmp/snmpd.conf &&
      echo 'syslocation Docker Test Lab 3' >> /etc/snmp/snmpd.conf &&
      echo 'syscontact Admin <admin@test.local>' >> /etc/snmp/snmpd.conf &&
      echo 'sysname snmp-test-3' >> /etc/snmp/snmpd.conf &&
      /usr/sbin/snmpd -f -Lo -c /etc/snmp/snmpd.conf"

  # Zabbix Monitoring Stack
  # PostgreSQL database for Zabbix
  postgres-zabbix:
    image: postgres:15-alpine
    container_name: zabbix-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - zabbix_postgres_data:/var/lib/postgresql/data
    networks:
      mcp-network:
        ipv4_address: 172.20.0.21
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zabbix -d zabbix"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zabbix Server
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-6.4-latest
    container_name: zabbix-server
    restart: unless-stopped
    depends_on:
      postgres-zabbix:
        condition: service_healthy
    environment:
      DB_SERVER_HOST: postgres-zabbix
      POSTGRES_DB: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_password
      ZBX_HISTORYSTORAGETYPES: log,text
      ZBX_DEBUGLEVEL: 1
      ZBX_HOUSEKEEPINGFREQUENCY: 1
      ZBX_MAXHOUSEKEEPERDELETE: 5000
      ZBX_PROXYCONFIGFREQUENCY: 3600
    volumes:
      - zabbix_server_data:/var/lib/zabbix
      - zabbix_server_enc:/var/lib/zabbix/enc
      - zabbix_server_ssh:/var/lib/zabbix/ssh_keys
      - zabbix_server_ssl:/var/lib/zabbix/ssl
    networks:
      mcp-network:
        ipv4_address: 172.20.0.22
    ports:
      - "10051:10051"
    healthcheck:
      test: ["CMD-SHELL", "zabbix_get -s 127.0.0.1 -k agent.ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Zabbix Web Interface
  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-6.4-latest
    container_name: zabbix-web
    restart: unless-stopped
    depends_on:
      - postgres-zabbix
      - zabbix-server
    environment:
      ZBX_SERVER_HOST: zabbix-server
      DB_SERVER_HOST: postgres-zabbix
      POSTGRES_DB: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_password
      PHP_TZ: America/New_York
    volumes:
      - zabbix_web_ssl:/etc/ssl/nginx
    networks:
      mcp-network:
        ipv4_address: 172.20.0.23
    ports:
      - "8080:8080"
      - "8443:8443"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Zabbix Agent (for testing)
  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-6.4-latest
    container_name: zabbix-agent
    restart: unless-stopped
    depends_on:
      - zabbix-server
    environment:
      ZBX_HOSTNAME: "Zabbix Test Agent"
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
      ZBX_PASSIVE_ALLOW: true
      ZBX_ACTIVE_ALLOW: true
      ZBX_DEBUGLEVEL: 3
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /dev:/host/dev:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    privileged: true
    pid: "host"
    networks:
      mcp-network:
        ipv4_address: 172.20.0.24
    ports:
      - "10050:10050"

  # Additional test agent (simulates another monitored host)
  zabbix-agent-2:
    image: zabbix/zabbix-agent:alpine-6.4-latest
    container_name: zabbix-agent-2
    restart: unless-stopped
    depends_on:
      - zabbix-server
    environment:
      ZBX_HOSTNAME: "Test Web Server"
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
      ZBX_PASSIVE_ALLOW: true
      ZBX_ACTIVE_ALLOW: true
      ZBX_DEBUGLEVEL: 3
    networks:
      mcp-network:
        ipv4_address: 172.20.0.25
    ports:
      - "10052:10050"

  # NGINX web server (simulates a monitored web service)
  nginx-test:
    image: nginx:alpine
    container_name: nginx-test-server
    restart: unless-stopped
    networks:
      mcp-network:
        ipv4_address: 172.20.0.26
    ports:
      - "8888:80"
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# Persistent volumes for data survival across container redeployments
volumes:
  mcp_data:
    driver: local
  mcp_logs:
    driver: local
  rabbitmq_data:
    driver: local
  mcp_plugins:
    driver: local
  # Zabbix volumes
  zabbix_postgres_data:
    driver: local
  zabbix_server_data:
    driver: local
  zabbix_server_enc:
    driver: local
  zabbix_server_ssh:
    driver: local
  zabbix_server_ssl:
    driver: local
  zabbix_web_ssl:
    driver: local
