History

    18. prompts/get▼
    Request:

{
method:

"prompts/get"

params:{
name:

"incident_response"

arguments:{
severity:

"P1"

alertData:

""

}
}
}
Response:
{
description:

"Incident response playbook"

messages:[
0:{
role:

"user"

content:{ ... }2 items
}
]
}
17. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"alertData"

value:

""

}
ref:{
type:

"ref/prompt"

name:

"incident_response"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
16. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"alertData"

value:

"the univers"

}
ref:{
type:

"ref/prompt"

name:

"incident_response"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
15. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"alertData"

value:

"the universi"

}
ref:{
type:

"ref/prompt"

name:

"incident_response"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
14. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"alertData"

value:

"the univers"

}
ref:{
type:

"ref/prompt"

name:

"incident_response"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
13. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"alertData"

value:

"the uni"

}
ref:{
type:

"ref/prompt"

name:

"incident_response"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
12. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"severity"

value:

"P1"

}
ref:{
type:

"ref/prompt"

name:

"incident_response"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
11. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"severity"

value:

"P21"

}
ref:{
type:

"ref/prompt"

name:

"incident_response"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
10. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"severity"

value:

"P"

}
ref:{
type:

"ref/prompt"

name:

"incident_response"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
9. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"deviceType"

value:

""

}
ref:{
type:

"ref/prompt"

name:

"cmdb_ci_classification"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
8. completion/complete▼
Request:
{
method:

"completion/complete"

params:{
argument:{
name:

"deviceType"

value:

"server"

}
ref:{
type:

"ref/prompt"

name:

"cmdb_ci_classification"

}
}
}
Response:
{
completion:{
values:[]
hasMore:false
}
}
7. prompts/list▼
Request:
{
method:

"prompts/list"

params:{}
}
Response:
{
prompts:[
0:{
name:

"cmdb_ci_classification"

description:

"CMDB CI Classification Standards - Provides guidance for classifying Configuration Items (CIs) in th..."

arguments:[ ... ]2 items
}
1:{
name:

"network_topology_analysis"

description:

"Network Topology Analysis - Analyzes network topology data and provides insights for infrastructure ..."

arguments:[ ... ]2 items
}
2:{
name:

"security_assessment"

description:

"Infrastructure Security Assessment - Provides security analysis and recommendations based on infrast..."

arguments:[ ... ]2 items
}
3:{
name:

"capacity_planning"

description:

"Infrastructure Capacity Planning - Analyzes resource utilization and provides capacity planning reco..."

arguments:[ ... ]2 items
}
4:{
name:

"incident_response"

description:

"Incident Response Playbook - Provides incident response guidance based on infrastructure alerts and ..."

arguments:[ ... ]2 items
}
]
}
6. resources/read▼
Request:
{
method:

"resources/read"

params:{
uri:

"credentials://audit/log"

}
}
Response:
{
error:

"[
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "contents"
    ],
    "message": "Required"
  }
]"

}
5. resources/templates/list▼
Request:
{
method:

"resources/templates/list"

params:{}
}
Response:
{
resourceTemplates:[]
}
4. resources/templates/list▼
Request:
{
method:

"resources/templates/list"

params:{}
}
Response:
{
resourceTemplates:[]
}
3. resources/read▼
Request:
{
method:

"resources/read"

params:{
uri:

"credentials://audit/log"

}
}
Response:
{
error:

"[
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "contents"
    ],
    "message": "Required"
  }
]"

}
2. resources/list▼
Request:
{
method:

"resources/list"

params:{}
}
Response:
{
resources:[
0:{
name:

"Credential Audit Log"

uri:

"credentials://audit/log"

}
]
}
1. initialize▼
Request:
{
method:

"initialize"

}
Response:
{
capabilities:{
logging:{}
completions:{}
prompts:{
listChanged:true
}
resources:{
listChanged:true
}
tools:{
listChanged:true
}
}
serverInfo:{
name:

"mcp-open-discovery"

version:

"2.0.0"

description:

"Networking Discovery tools exposed via Model Context Protocol - SDK Compatible with Multi-Transport Support"

}
}