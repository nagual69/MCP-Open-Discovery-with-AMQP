services:
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: mcp-open-discovery
    container_name: mcp-open-discovery
    ports:
      - "3000:3000"
    environment:
      - ZABBIX_BASE_URL=http://172.20.0.22:8080
      - ZABBIX_USERNAME=Admin
      - ZABBIX_PASSWORD=OpenMCPD1sc0v3ry!
      # AMQP Transport Configuration
      - AMQP_URL=amqp://mcp:discovery@rabbitmq:5672
      - AMQP_ENABLED=true
      - TRANSPORT_MODE=http,amqp
      # AMQP Auto-Recovery Configuration
      - AMQP_AUTO_RECOVERY=true
      - AMQP_RETRY_INTERVAL=10000
      - AMQP_MAX_RETRY_ATTEMPTS=50
    volumes:
      # Persistent SQLite database storage
      - mcp_data:/app/data
      # Optional: Mount logs directory
      - mcp_logs:/app/logs
    networks:
      - mcp-network
    restart: unless-stopped
    cap_add:
      - NET_RAW
      - NET_ADMIN
      - NET_BIND_SERVICE
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      rabbitmq:
        condition: service_healthy

  # RabbitMQ for AMQP Transport
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: mcp-rabbitmq
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=mcp
      - RABBITMQ_DEFAULT_PASS=discovery
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      mcp-network:
        ipv4_address: 172.20.0.20
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # SNMP Test Servers for development and testing

  # 1. First SNMP Agent
  snmp-agent-1:
    image: alpine:latest
    container_name: snmp-agent-1
    ports:
      - "1161:161/udp"
    networks:
      mcp-network:
        ipv4_address: 172.20.0.10
    restart: unless-stopped
    command: >
      sh -c "
      apk add --no-cache net-snmp &&
      mkdir -p /etc/snmp &&
      echo 'rocommunity public default' > /etc/snmp/snmpd.conf &&
      echo 'syslocation Docker Test Lab' >> /etc/snmp/snmpd.conf &&
      echo 'syscontact Admin <admin@test.local>' >> /etc/snmp/snmpd.conf &&
      echo 'sysname snmp-test-1' >> /etc/snmp/snmpd.conf &&
      /usr/sbin/snmpd -f -Lo -c /etc/snmp/snmpd.conf"

  # 2. Second SNMP Agent 
  snmp-agent-2:
    image: alpine:latest
    container_name: snmp-agent-2
    ports:
      - "2161:161/udp"
    networks:
      mcp-network:
        ipv4_address: 172.20.0.11
    restart: unless-stopped
    command: >
      sh -c "
      apk add --no-cache net-snmp &&
      mkdir -p /etc/snmp &&
      echo 'rocommunity public default' > /etc/snmp/snmpd.conf &&
      echo 'syslocation Docker Test Lab 2' >> /etc/snmp/snmpd.conf &&
      echo 'syscontact Admin <admin@test.local>' >> /etc/snmp/snmpd.conf &&
      echo 'sysname snmp-test-2' >> /etc/snmp/snmpd.conf &&
      /usr/sbin/snmpd -f -Lo -c /etc/snmp/snmpd.conf"

  # 3. Third SNMP Agent with different community
  snmp-agent-3:
    image: alpine:latest
    container_name: snmp-agent-3
    ports:
      - "3161:161/udp"
    networks:
      mcp-network:
        ipv4_address: 172.20.0.12
    restart: unless-stopped
    command: >
      sh -c "
      apk add --no-cache net-snmp &&
      mkdir -p /etc/snmp &&
      echo 'rocommunity public default' > /etc/snmp/snmpd.conf &&
      echo 'rocommunity testcommunity default' >> /etc/snmp/snmpd.conf &&
      echo 'syslocation Docker Test Lab 3' >> /etc/snmp/snmpd.conf &&
      echo 'syscontact Admin <admin@test.local>' >> /etc/snmp/snmpd.conf &&
      echo 'sysname snmp-test-3' >> /etc/snmp/snmpd.conf &&
      /usr/sbin/snmpd -f -Lo -c /etc/snmp/snmpd.conf"

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# Persistent volumes for data survival across container redeployments
volumes:
  mcp_data:
    driver: local
  mcp_logs:
    driver: local
  rabbitmq_data:
    driver: local
